{"version":3,"sources":["api/ListOfProducts.ts","components/modalAceptDelate/ModalAceptDelate.tsx","components/modalWindow/ModalWindow.tsx","components/ProductsList/ProductsList.tsx","App.tsx","index.tsx"],"names":["listOfProducts","id","imageUrl","name","count","size","width","height","weight","comments","ModalAceptDelate","React","memo","isVisible","changeVisible","acceptDelate","className","classNames","aceptDelate","type","onClick","ModalWindow","handleSubmit","formState","handlerForm","delateProduct","addDelateComment","addComment","modal","onSubmit","htmlFor","placeholder","value","onChange","map","comment","index","visibleNone","delateButton","ProductsList","list","loadProductDetails","product","data-target","App","useState","setList","filter","setFilter","setAddComment","setFormState","editState","setEditState","setIsVisible","boolen","prev","handleClear","getMaxId","ids","item","Math","max","isValidForm","useEffect","sort","a","b","localeCompare","sortByFilter","event","currentTarget","disabled","productIndex","String","preventDefault","console","log","itemForAdd","Number","updateList","editProduct","AddToList","addProduct","target","delateIndex","updateComment","splice","copyList","push","delateItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4c64e30.chunk.js","sourcesContent":["const listOfProducts = [\n  {\n    id: 2,\n    imageUrl: 'some url here 2',\n    name: 'b',\n    count: 2,\n    size: {\n      width: 300,\n      height: 300,\n    },\n    weight: '300g',\n    comments: ['CommentModel', 'CommentModel', 'One more'],\n  },\n  {\n    id: 1,\n    imageUrl: 'some url here',\n    name: 'a',\n    count: 4,\n    size: {\n      width: 200,\n      height: 200,\n    },\n    weight: '200g',\n    comments: ['CommentModel', 'CommentModel'],\n  },\n  {\n    id: 4,\n    imageUrl: 'some url here',\n    name: 'g',\n    count: 8,\n    size: {\n      width: 200,\n      height: 200,\n    },\n    weight: '200g',\n    comments: ['CommentModel', 'CommentModel'],\n  },\n  {\n    id: 5,\n    imageUrl: 'some url here',\n    name: 'c',\n    count: 23,\n    size: {\n      width: 200,\n      height: 200,\n    },\n    weight: '200g',\n    comments: ['CommentModel', 'CommentModel'],\n  },\n];\n\nexport default listOfProducts;\n","import classNames from 'classnames';\nimport React from 'react';\n\ntype Props = {\n  isVisible: {\n    aceptDelate: boolean,\n  },\n  changeVisible: (name: string, boolen: boolean) => void,\n  acceptDelate: () => void,\n};\n\nexport const ModalAceptDelate: React.FC<Props> = React.memo(\n  ({ isVisible, changeVisible, acceptDelate }) => {\n    return (\n      <div className={classNames('modal', { 'is-active': isVisible.aceptDelate })}>\n        <div className=\"modal-background\"></div>\n\n        <div className=\"modal-content\">\n          <div className=\"box\">\n            <p>Are you sure?</p>\n            <div className=\"field is-grouped\">\n              <div className=\"control\">\n                <button type=\"button\" className=\"button is-danger\" onClick={() => acceptDelate()}>Yes</button>\n              </div>\n              <div className=\"control\">\n                <button type=\"button\" className=\"button\" onClick={() => changeVisible('aceptDelate', false)}>No</button>\n              </div>\n            </div>\n\n            <button type=\"button\" className=\"modal-close is-large\" onClick={() => changeVisible('aceptDelate', false)}> </button>\n          </div>\n        </div>\n      </div>\n    );\n  },\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport './ModalWindow.scss';\n\ntype Props = {\n  isVisible: {\n    modal: boolean,\n    delateButton: boolean,\n  },\n  handleSubmit: (event: React.FormEvent<HTMLFormElement>) => void,\n  formState: {\n    name: string,\n    imageUrl: string,\n    count: string,\n    width: string,\n    height: string,\n    weight: string,\n    comments: string[],\n  },\n  handlerForm: (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void,\n  changeVisible: (name: string, boolen: boolean) => void,\n  delateProduct: () => void,\n  addDelateComment: (type: string, index: number) => void,\n  addComment: string,\n};\n\nexport const ModalWindow: React.FC<Props> = React.memo(\n  ({\n    isVisible,\n    handleSubmit,\n    formState,\n    handlerForm,\n    changeVisible,\n    delateProduct,\n    addDelateComment,\n    addComment,\n  }) => {\n    return (\n      <div className={classNames('modal', { 'is-active': isVisible.modal })}>\n        <div className=\"modal-background\"></div>\n        <div className=\"modal-content\">\n          <div className=\"box\">\n            <form onSubmit={handleSubmit}>\n              <div className=\"field\">\n                <label className=\"label\" htmlFor=\"name\">\n                  Name\n                  <div className=\"control\">\n                    <input id=\"name\" className=\"input\" type=\"text\" placeholder=\"Text input\" value={formState.name} onChange={handlerForm}></input>\n                  </div>\n                </label>\n              </div>\n\n              <div className=\"field\">\n                <label className=\"label\" htmlFor=\"imageUrl\">\n                  imageUrl\n                  <div className=\"control\">\n                    <input id=\"imageUrl\" className=\"input\" type=\"text\" placeholder=\"Text input\" value={formState.imageUrl} onChange={handlerForm}></input>\n                  </div>\n                </label>\n              </div>\n\n              <div className=\"field\">\n                <label className=\"label\" htmlFor=\"count\">\n                  count\n                  <div className=\"control\">\n                    <input id=\"count\" className=\"input\" type=\"number\" placeholder=\"Text input\" value={formState.count} onChange={handlerForm}></input>\n                  </div>\n                </label>\n              </div>\n\n              <div className=\"field\">\n                <label className=\"label\" htmlFor=\"width\">\n                  width\n                  <div className=\"control\">\n                    <input id=\"width\" className=\"input\" type=\"number\" placeholder=\"Text input\" value={formState.width} onChange={handlerForm}></input>\n                  </div>\n                </label>\n              </div>\n\n              <div className=\"field\">\n                <label className=\"label\" htmlFor=\"height\">\n                  height\n                  <div className=\"control\">\n                    <input id=\"height\" className=\"input\" type=\"number\" placeholder=\"Text input\" value={formState.height} onChange={handlerForm}></input>\n                  </div>\n                </label>\n              </div>\n\n              <div className=\"field\">\n                <label className=\"label\" htmlFor=\"weight\">\n                  weight\n                  <div className=\"control\">\n                    <input id=\"weight\" className=\"input\" type=\"text\" placeholder=\"Text input\" value={formState.weight} onChange={handlerForm}></input>\n                  </div>\n                </label>\n              </div>\n\n              <div className=\"comments\">\n                <h2>Comments</h2>\n                {formState.comments.map((comment, index) => (\n                  <>\n                    <div className=\"box comments__item\" key={comment}>\n                      {comment}\n                      <button\n                        type=\"button\"\n                        className=\"button is-danger\"\n                        onClick={() => addDelateComment('delate', index)}\n                      >\n                        Delate\n                      </button>\n                    </div>\n                  </>\n                ))}\n                <input id=\"addComment\" className=\"textarea\" placeholder=\"Add new comment\" value={addComment} onChange={handlerForm}></input>\n                <button\n                  type=\"button\"\n                  className=\"button\"\n                  onClick={() => addDelateComment('add', -1)}\n                >\n                  Add new Comment\n                </button>\n              </div>\n\n              <div className=\"field is-grouped\">\n                <div className=\"control\">\n                  <button type=\"submit\" className=\"button is-success\">\n                    Save\n                  </button>\n                </div>\n                <div className=\"control\">\n                  <button\n                    type=\"button\"\n                    className=\"button\"\n                    onClick={() => changeVisible('modal', false)}\n                  >\n                    Cancel\n                  </button>\n                </div>\n                <div className=\"control\">\n                  <button\n                    type=\"button\"\n                    className={classNames(\n                      'button', 'is-danger', { visibleNone: isVisible.delateButton },\n                    )}\n                    onClick={delateProduct}\n                  >\n                    Delate\n                  </button>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"modal-close is-large\"\n                  onClick={() => changeVisible('modal', false)}\n                >\n                  X\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  },\n);\n","import React from 'react';\nimport './ProductsList.scss';\n\ntype Props = {\n  list: Product[],\n  loadProductDetails: (product: Product, index: number) => void,\n  changeVisible: (name: string, boolean: boolean) => void,\n};\n\nexport const ProductsList: React.FC<Props> = React.memo(\n  ({ list, loadProductDetails, changeVisible }) => {\n    return (\n      <>\n        <ul className=\"list\">\n          {list.map((product, index) => (\n            <li key={product.id} className=\"list__item\">\n              <div>\n                {product.id}\n              </div>\n              <div>\n                {product.name}\n              </div>\n              <div>\n                {product.count}\n              </div>\n              <div>\n                {product.size.width}\n              </div>\n              <div>\n                {product.size.height}\n              </div>\n              <div>\n                {product.weight}\n              </div>\n              <button\n                type=\"button\"\n                className=\"js-modal-trigger button is-primary\"\n                data-target=\"modal-js-example\"\n                onClick={() => {\n                  loadProductDetails(product, index);\n                  changeVisible('modal', true);\n                }}\n              >\n                Edit\n              </button>\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  },\n);\n","import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport listOfProducts from './api/ListOfProducts';\nimport './App.scss';\nimport { ModalAceptDelate } from './components/modalAceptDelate/ModalAceptDelate';\nimport { ModalWindow } from './components/modalWindow/ModalWindow';\nimport { ProductsList } from './components/ProductsList/ProductsList';\n\nexport const App: React.FC = () => {\n  const [list, setList] = useState<Product[]>(listOfProducts);\n  const [filter, setFilter] = useState('');\n\n  const [addComment, setAddComment] = useState('');\n\n  const [formState, setFormState] = useState({\n    name: '',\n    imageUrl: '',\n    count: '',\n    width: '',\n    height: '',\n    weight: '',\n    comments: [''],\n  });\n\n  const [editState, setEditState] = useState({\n    type: '',\n    id: 0,\n    index: -1,\n  });\n\n  const [isVisible, setIsVisible] = useState({\n    modal: false,\n    delateButton: true,\n    aceptDelate: false,\n  });\n\n  const changeVisible = (name: string, boolen: boolean) => {\n    setIsVisible(prev => ({\n      ...prev,\n      [name]: boolen,\n    }));\n  };\n\n  const handleFilter = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilter(event.currentTarget.value);\n  };\n\n  const handleClear = () => {\n    setFormState({\n      name: '',\n      imageUrl: '',\n      count: '',\n      width: '',\n      height: '',\n      weight: '',\n      comments: [],\n    });\n  };\n\n  const getMaxId = () => {\n    const ids = list.map(item => item.id);\n\n    return Math.max(...ids);\n  };\n\n  const addProduct = () => {\n    const itemForAdd = {\n      id: getMaxId() + 1,\n      imageUrl: formState.imageUrl,\n      name: formState.name,\n      count: Number(formState.count),\n      size: {\n        width: Number(formState.width),\n        height: Number(formState.height),\n      },\n      weight: formState.weight,\n      comments: [],\n    };\n\n    const AddToList = [...list, itemForAdd];\n\n    setList(AddToList);\n    handleClear();\n    changeVisible('modal', false);\n  };\n\n  const isValidForm = () => {\n    if (!formState.name\n      || !formState.imageUrl\n      || !formState.count\n      || !formState.width\n      || !formState.height\n      || !formState.weight\n    ) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const changeEditType = (type: string) => {\n    if (type === 'Add') {\n      changeVisible('delateButton', true);\n    }\n\n    setEditState(prev => ({\n      ...prev,\n      type,\n    }));\n  };\n\n  const editProduct = () => {\n    const itemForAdd = {\n      id: editState.id,\n      imageUrl: formState.imageUrl,\n      name: formState.name,\n      count: Number(formState.count),\n      size: {\n        width: Number(formState.width),\n        height: Number(formState.height),\n      },\n      weight: formState.weight,\n      comments: formState.comments,\n    };\n\n    const updateList = [...list].map(item => {\n      if (item.id === editState.id) {\n        return itemForAdd;\n      }\n\n      return item;\n    });\n\n    setList(updateList);\n  };\n\n  const delateProduct = () => {\n    if (editState.type !== 'Edit') {\n      return;\n    }\n\n    changeVisible('aceptDelate', true);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    // eslint-disable-next-line\n    console.log('handlesubmit')\n    if (isValidForm() && editState.type === 'Edit') {\n      editProduct();\n    }\n\n    if (isValidForm() && editState.type === 'Add') {\n      addProduct();\n    }\n  };\n\n  const loadProductDetails = (product: Product, productIndex: number) => {\n    setEditState(prev => ({\n      ...prev,\n      type: 'Edit',\n      id: product.id,\n      index: productIndex,\n    }));\n    changeVisible('delateButton', false);\n\n    setFormState({\n      name: product.name,\n      imageUrl: product.imageUrl,\n      count: String(product.count),\n      width: String(product.size.width),\n      height: String(product.size.height),\n      weight: product.weight,\n      comments: product.comments,\n    });\n  };\n\n  const handlerForm = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    switch (event.target.id) {\n      case 'name':\n        return setFormState(prev => ({\n          ...prev,\n          name: event.target.value,\n        }));\n      case 'imageUrl':\n        return setFormState(prev => ({\n          ...prev,\n          imageUrl: event.target.value,\n        }));\n      case 'count':\n        return setFormState(prev => ({\n          ...prev,\n          count: event.target.value,\n        }));\n      case 'width':\n        return setFormState(prev => ({\n          ...prev,\n          width: event.target.value,\n        }));\n      case 'height':\n        return setFormState(prev => ({\n          ...prev,\n          height: event.target.value,\n        }));\n      case 'weight':\n        return setFormState(prev => ({\n          ...prev,\n          weight: event.target.value,\n        }));\n      case 'addComment':\n        return setAddComment(event.target.value);\n      default:\n        return null;\n    }\n  };\n\n  const acceptDelate = () => {\n    const delateItem = [...list].filter(item => {\n      if (item.id === editState.id) {\n        return null;\n      }\n\n      return item;\n    });\n\n    setIsVisible(prev => ({\n      ...prev,\n      modal: false,\n      aceptDelate: false,\n    }));\n    setList(delateItem);\n    handleClear();\n  };\n\n  const addDelateComment = (type: string, delateIndex: number) => {\n    if (type === 'delate') {\n      const updateComment = [...list].map(product => {\n        product.comments.map((item, index) => {\n          if (index === delateIndex) {\n            product.comments.splice(index, 1);\n          }\n\n          return item;\n        });\n\n        return product;\n      });\n\n      setList(updateComment);\n    } else {\n      const copyList = [...list];\n\n      copyList[editState.index].comments.push(addComment);\n\n      setAddComment('');\n      setList(copyList);\n    }\n  };\n\n  const sortByFilter = () => {\n    switch (filter) {\n      case 'name':\n        return setList([...list].sort((a, b) => a.name.localeCompare(b.name)));\n      case 'count':\n        return setList([...list].sort((a, b) => a.count - b.count));\n      default:\n        return setList([...list]);\n    }\n  };\n\n  useEffect(() => {\n    sortByFilter();\n  }, [filter]);\n\n  return (\n    <div className=\"app\">\n      <div className=\"select\">\n        <select\n          value={filter}\n          onChange={handleFilter}\n        >\n          <option value=\"\" disabled>Select Filter</option>\n          <option value=\"name\">Name</option>\n          <option value=\"count\">Count</option>\n        </select>\n      </div>\n      <ProductsList\n        list={list}\n        loadProductDetails={loadProductDetails}\n        changeVisible={changeVisible}\n      />\n\n      <button\n        type=\"button\"\n        className={classNames('js-modal-trigger', 'button', 'is-primary')}\n        data-target=\"modal-js-example\"\n        onClick={() => {\n          changeEditType('Add');\n          changeVisible('modal', true);\n        }}\n      >\n        Add product\n      </button>\n\n      <ModalWindow\n        isVisible={isVisible}\n        handleSubmit={handleSubmit}\n        formState={formState}\n        handlerForm={handlerForm}\n        changeVisible={changeVisible}\n        delateProduct={delateProduct}\n        addDelateComment={addDelateComment}\n        addComment={addComment}\n      />\n\n      <ModalAceptDelate\n        isVisible={isVisible}\n        changeVisible={changeVisible}\n        acceptDelate={acceptDelate}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\nimport './modalWindow';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}